<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.applet.common.mapper.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.applet.common.entity.OrderInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="courier_no" jdbcType="VARCHAR" property="courierNo" />
    <result column="applet_id" jdbcType="INTEGER" property="appletId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="wx_id" jdbcType="INTEGER" property="wxId" />
    <result column="receiver_id" jdbcType="INTEGER" property="receiverId" />
    <result column="user_remark" jdbcType="VARCHAR" property="userRemark" />
    <result column="user_coupon_id" jdbcType="INTEGER" property="userCouponId" />
    <result column="coupon_amount" jdbcType="DOUBLE" property="couponAmount" />
    <result column="freight_amount" jdbcType="DOUBLE" property="freightAmount" />
    <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
    <result column="actual_amount" jdbcType="DOUBLE" property="actualAmount" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="pay_relation_id" jdbcType="VARCHAR" property="payRelationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_no, courier_no, applet_id, user_id, wx_id, receiver_id, user_remark, user_coupon_id, 
    coupon_amount, freight_amount, total_amount, actual_amount, order_status, create_time, 
    update_time, pay_type, pay_status, pay_channel, pay_relation_id
  </sql>
  <select id="selectByExample" parameterType="com.applet.common.entity.OrderInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.applet.common.entity.OrderInfoExample">
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.applet.common.entity.OrderInfo">
    insert into order_info (id, order_no, courier_no, 
      applet_id, user_id, wx_id, 
      receiver_id, user_remark, user_coupon_id, 
      coupon_amount, freight_amount, total_amount, 
      actual_amount, order_status, create_time, 
      update_time, pay_type, pay_status, 
      pay_channel, pay_relation_id)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{courierNo,jdbcType=VARCHAR}, 
      #{appletId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{wxId,jdbcType=INTEGER}, 
      #{receiverId,jdbcType=INTEGER}, #{userRemark,jdbcType=VARCHAR}, #{userCouponId,jdbcType=INTEGER}, 
      #{couponAmount,jdbcType=DOUBLE}, #{freightAmount,jdbcType=DOUBLE}, #{totalAmount,jdbcType=DOUBLE}, 
      #{actualAmount,jdbcType=DOUBLE}, #{orderStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, 
      #{payChannel,jdbcType=VARCHAR}, #{payRelationId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.applet.common.entity.OrderInfo" useGeneratedKeys="true">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="courierNo != null">
        courier_no,
      </if>
      <if test="appletId != null">
        applet_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="wxId != null">
        wx_id,
      </if>
      <if test="receiverId != null">
        receiver_id,
      </if>
      <if test="userRemark != null">
        user_remark,
      </if>
      <if test="userCouponId != null">
        user_coupon_id,
      </if>
      <if test="couponAmount != null">
        coupon_amount,
      </if>
      <if test="freightAmount != null">
        freight_amount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="payChannel != null">
        pay_channel,
      </if>
      <if test="payRelationId != null">
        pay_relation_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="courierNo != null">
        #{courierNo,jdbcType=VARCHAR},
      </if>
      <if test="appletId != null">
        #{appletId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="wxId != null">
        #{wxId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="userRemark != null">
        #{userRemark,jdbcType=VARCHAR},
      </if>
      <if test="userCouponId != null">
        #{userCouponId,jdbcType=INTEGER},
      </if>
      <if test="couponAmount != null">
        #{couponAmount,jdbcType=DOUBLE},
      </if>
      <if test="freightAmount != null">
        #{freightAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null">
        #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="payRelationId != null">
        #{payRelationId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.applet.common.entity.OrderInfoExample" resultType="java.lang.Long">
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.courierNo != null">
        courier_no = #{record.courierNo,jdbcType=VARCHAR},
      </if>
      <if test="record.appletId != null">
        applet_id = #{record.appletId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.wxId != null">
        wx_id = #{record.wxId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverId != null">
        receiver_id = #{record.receiverId,jdbcType=INTEGER},
      </if>
      <if test="record.userRemark != null">
        user_remark = #{record.userRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.userCouponId != null">
        user_coupon_id = #{record.userCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.couponAmount != null">
        coupon_amount = #{record.couponAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.freightAmount != null">
        freight_amount = #{record.freightAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.payChannel != null">
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      </if>
      <if test="record.payRelationId != null">
        pay_relation_id = #{record.payRelationId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_info
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      courier_no = #{record.courierNo,jdbcType=VARCHAR},
      applet_id = #{record.appletId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      wx_id = #{record.wxId,jdbcType=INTEGER},
      receiver_id = #{record.receiverId,jdbcType=INTEGER},
      user_remark = #{record.userRemark,jdbcType=VARCHAR},
      user_coupon_id = #{record.userCouponId,jdbcType=INTEGER},
      coupon_amount = #{record.couponAmount,jdbcType=DOUBLE},
      freight_amount = #{record.freightAmount,jdbcType=DOUBLE},
      total_amount = #{record.totalAmount,jdbcType=DOUBLE},
      actual_amount = #{record.actualAmount,jdbcType=DOUBLE},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      pay_channel = #{record.payChannel,jdbcType=VARCHAR},
      pay_relation_id = #{record.payRelationId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.applet.common.entity.OrderInfo">
    update order_info
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="courierNo != null">
        courier_no = #{courierNo,jdbcType=VARCHAR},
      </if>
      <if test="appletId != null">
        applet_id = #{appletId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="wxId != null">
        wx_id = #{wxId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="userRemark != null">
        user_remark = #{userRemark,jdbcType=VARCHAR},
      </if>
      <if test="userCouponId != null">
        user_coupon_id = #{userCouponId,jdbcType=INTEGER},
      </if>
      <if test="couponAmount != null">
        coupon_amount = #{couponAmount,jdbcType=DOUBLE},
      </if>
      <if test="freightAmount != null">
        freight_amount = #{freightAmount,jdbcType=DOUBLE},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payChannel != null">
        pay_channel = #{payChannel,jdbcType=VARCHAR},
      </if>
      <if test="payRelationId != null">
        pay_relation_id = #{payRelationId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.applet.common.entity.OrderInfo">
    update order_info
    set order_no = #{orderNo,jdbcType=VARCHAR},
      courier_no = #{courierNo,jdbcType=VARCHAR},
      applet_id = #{appletId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      wx_id = #{wxId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER},
      user_remark = #{userRemark,jdbcType=VARCHAR},
      user_coupon_id = #{userCouponId,jdbcType=INTEGER},
      coupon_amount = #{couponAmount,jdbcType=DOUBLE},
      freight_amount = #{freightAmount,jdbcType=DOUBLE},
      total_amount = #{totalAmount,jdbcType=DOUBLE},
      actual_amount = #{actualAmount,jdbcType=DOUBLE},
      order_status = #{orderStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      pay_channel = #{payChannel,jdbcType=VARCHAR},
      pay_relation_id = #{payRelationId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>
</mapper>