<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.applet.common.mapper.FreightDeployMapper">
  <resultMap id="BaseResultMap" type="com.applet.common.entity.FreightDeploy">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="applet_id" jdbcType="INTEGER" property="appletId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="minimum" jdbcType="INTEGER" property="minimum" />
    <result column="maximum" jdbcType="INTEGER" property="maximum" />
    <result column="freight" jdbcType="DOUBLE" property="freight" />
    <result column="exempt_amount" jdbcType="DOUBLE" property="exemptAmount" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, applet_id, title, minimum, maximum, freight, exempt_amount, update_time, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.applet.common.entity.FreightDeployExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from freight_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from freight_deploy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from freight_deploy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.applet.common.entity.FreightDeployExample">
    delete from freight_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.applet.common.entity.FreightDeploy">
    insert into freight_deploy (id, user_id, applet_id, 
      title, minimum, maximum, 
      freight, exempt_amount, update_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{appletId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{minimum,jdbcType=INTEGER}, #{maximum,jdbcType=INTEGER}, 
      #{freight,jdbcType=DOUBLE}, #{exemptAmount,jdbcType=DOUBLE}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.applet.common.entity.FreightDeploy" useGeneratedKeys="true">
    insert into freight_deploy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="appletId != null">
        applet_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="minimum != null">
        minimum,
      </if>
      <if test="maximum != null">
        maximum,
      </if>
      <if test="freight != null">
        freight,
      </if>
      <if test="exemptAmount != null">
        exempt_amount,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="appletId != null">
        #{appletId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="minimum != null">
        #{minimum,jdbcType=INTEGER},
      </if>
      <if test="maximum != null">
        #{maximum,jdbcType=INTEGER},
      </if>
      <if test="freight != null">
        #{freight,jdbcType=DOUBLE},
      </if>
      <if test="exemptAmount != null">
        #{exemptAmount,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.applet.common.entity.FreightDeployExample" resultType="java.lang.Long">
    select count(*) from freight_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update freight_deploy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.appletId != null">
        applet_id = #{record.appletId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.minimum != null">
        minimum = #{record.minimum,jdbcType=INTEGER},
      </if>
      <if test="record.maximum != null">
        maximum = #{record.maximum,jdbcType=INTEGER},
      </if>
      <if test="record.freight != null">
        freight = #{record.freight,jdbcType=DOUBLE},
      </if>
      <if test="record.exemptAmount != null">
        exempt_amount = #{record.exemptAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update freight_deploy
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      applet_id = #{record.appletId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      minimum = #{record.minimum,jdbcType=INTEGER},
      maximum = #{record.maximum,jdbcType=INTEGER},
      freight = #{record.freight,jdbcType=DOUBLE},
      exempt_amount = #{record.exemptAmount,jdbcType=DOUBLE},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.applet.common.entity.FreightDeploy">
    update freight_deploy
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="appletId != null">
        applet_id = #{appletId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="minimum != null">
        minimum = #{minimum,jdbcType=INTEGER},
      </if>
      <if test="maximum != null">
        maximum = #{maximum,jdbcType=INTEGER},
      </if>
      <if test="freight != null">
        freight = #{freight,jdbcType=DOUBLE},
      </if>
      <if test="exemptAmount != null">
        exempt_amount = #{exemptAmount,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.applet.common.entity.FreightDeploy">
    update freight_deploy
    set user_id = #{userId,jdbcType=INTEGER},
      applet_id = #{appletId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      minimum = #{minimum,jdbcType=INTEGER},
      maximum = #{maximum,jdbcType=INTEGER},
      freight = #{freight,jdbcType=DOUBLE},
      exempt_amount = #{exemptAmount,jdbcType=DOUBLE},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>
</mapper>