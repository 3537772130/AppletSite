<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.applet.common.mapper.GoodsInfoMapper">
  <resultMap id="BaseResultMap" type="com.applet.common.entity.GoodsInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="cover_src" jdbcType="VARCHAR" property="coverSrc" />
    <result column="min_price" jdbcType="DOUBLE" property="minPrice" />
    <result column="max_price" jdbcType="DOUBLE" property="maxPrice" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
    <result column="describe_str" jdbcType="VARCHAR" property="describeStr" />
    <result column="if_coupon" jdbcType="BIT" property="ifCoupon" />
    <result column="goods_index" jdbcType="INTEGER" property="goodsIndex" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type_id, goods_name, cover_src, min_price, max_price, discount, describe_str, 
    if_coupon, goods_index, update_time, status
  </sql>
  <select id="selectByExample" parameterType="com.applet.common.entity.GoodsInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.applet.common.entity.GoodsInfoExample">
    delete from goods_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.applet.common.entity.GoodsInfo">
    insert into goods_info (id, user_id, type_id, 
      goods_name, cover_src, min_price, 
      max_price, discount, describe_str, 
      if_coupon, goods_index, update_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{coverSrc,jdbcType=VARCHAR}, #{minPrice,jdbcType=DOUBLE}, 
      #{maxPrice,jdbcType=DOUBLE}, #{discount,jdbcType=INTEGER}, #{describeStr,jdbcType=VARCHAR}, 
      #{ifCoupon,jdbcType=BIT}, #{goodsIndex,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.applet.common.entity.GoodsInfo" useGeneratedKeys="true">
    insert into goods_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="coverSrc != null">
        cover_src,
      </if>
      <if test="minPrice != null">
        min_price,
      </if>
      <if test="maxPrice != null">
        max_price,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="describeStr != null">
        describe_str,
      </if>
      <if test="ifCoupon != null">
        if_coupon,
      </if>
      <if test="goodsIndex != null">
        goods_index,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="coverSrc != null">
        #{coverSrc,jdbcType=VARCHAR},
      </if>
      <if test="minPrice != null">
        #{minPrice,jdbcType=DOUBLE},
      </if>
      <if test="maxPrice != null">
        #{maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="describeStr != null">
        #{describeStr,jdbcType=VARCHAR},
      </if>
      <if test="ifCoupon != null">
        #{ifCoupon,jdbcType=BIT},
      </if>
      <if test="goodsIndex != null">
        #{goodsIndex,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.applet.common.entity.GoodsInfoExample" resultType="java.lang.Long">
    select count(*) from goods_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.coverSrc != null">
        cover_src = #{record.coverSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.minPrice != null">
        min_price = #{record.minPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.maxPrice != null">
        max_price = #{record.maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.describeStr != null">
        describe_str = #{record.describeStr,jdbcType=VARCHAR},
      </if>
      <if test="record.ifCoupon != null">
        if_coupon = #{record.ifCoupon,jdbcType=BIT},
      </if>
      <if test="record.goodsIndex != null">
        goods_index = #{record.goodsIndex,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_info
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      cover_src = #{record.coverSrc,jdbcType=VARCHAR},
      min_price = #{record.minPrice,jdbcType=DOUBLE},
      max_price = #{record.maxPrice,jdbcType=DOUBLE},
      discount = #{record.discount,jdbcType=INTEGER},
      describe_str = #{record.describeStr,jdbcType=VARCHAR},
      if_coupon = #{record.ifCoupon,jdbcType=BIT},
      goods_index = #{record.goodsIndex,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.applet.common.entity.GoodsInfo">
    update goods_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="coverSrc != null">
        cover_src = #{coverSrc,jdbcType=VARCHAR},
      </if>
      <if test="minPrice != null">
        min_price = #{minPrice,jdbcType=DOUBLE},
      </if>
      <if test="maxPrice != null">
        max_price = #{maxPrice,jdbcType=DOUBLE},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="describeStr != null">
        describe_str = #{describeStr,jdbcType=VARCHAR},
      </if>
      <if test="ifCoupon != null">
        if_coupon = #{ifCoupon,jdbcType=BIT},
      </if>
      <if test="goodsIndex != null">
        goods_index = #{goodsIndex,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.applet.common.entity.GoodsInfo">
    update goods_info
    set user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      cover_src = #{coverSrc,jdbcType=VARCHAR},
      min_price = #{minPrice,jdbcType=DOUBLE},
      max_price = #{maxPrice,jdbcType=DOUBLE},
      discount = #{discount,jdbcType=INTEGER},
      describe_str = #{describeStr,jdbcType=VARCHAR},
      if_coupon = #{ifCoupon,jdbcType=BIT},
      goods_index = #{goodsIndex,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>
</mapper>