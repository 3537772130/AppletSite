<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.applet.common.mapper.SaleOrderDetailsMapper">
  <resultMap id="BaseResultMap" type="com.applet.common.entity.SaleOrderDetails">
    <id column="order_dtl_id" jdbcType="INTEGER" property="orderDtlId" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_specs_id" jdbcType="INTEGER" property="goodsSpecsId" />
    <result column="goods_specs_name" jdbcType="VARCHAR" property="goodsSpecsName" />
    <result column="goods_specs_pic" jdbcType="VARCHAR" property="goodsSpecsPic" />
    <result column="sale_qty" jdbcType="INTEGER" property="saleQty" />
    <result column="discount_price" jdbcType="DECIMAL" property="discountPrice" />
    <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_dtl_id, gmt_created, order_id, goods_id, goods_name, goods_specs_id, goods_specs_name,
    goods_specs_pic, sale_qty, discount_price, sale_price
  </sql>
  <select id="selectByExample" parameterType="com.applet.common.entity.SaleOrderDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sale_order_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sale_order_dtl
    where order_dtl_id = #{orderDtlId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale_order_dtl
    where order_dtl_id = #{orderDtlId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.applet.common.entity.SaleOrderDetailsExample">
    delete from sale_order_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.applet.common.entity.SaleOrderDetails">
    insert into sale_order_dtl (order_dtl_id, gmt_created, order_id,
      goods_id, goods_name, goods_specs_id,
      goods_specs_name, goods_specs_pic, sale_qty,
      discount_price, sale_price)
    values (#{orderDtlId,jdbcType=INTEGER}, #{gmtCreated,jdbcType=TIMESTAMP}, #{orderId,jdbcType=INTEGER},
      #{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsSpecsId,jdbcType=INTEGER},
      #{goodsSpecsName,jdbcType=VARCHAR}, #{goodsSpecsPic,jdbcType=VARCHAR}, #{saleQty,jdbcType=INTEGER},
      #{discountPrice,jdbcType=DECIMAL}, #{salePrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.applet.common.entity.SaleOrderDetails" useGeneratedKeys="true">
    insert into sale_order_dtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderDtlId != null">
        order_dtl_id,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsSpecsId != null">
        goods_specs_id,
      </if>
      <if test="goodsSpecsName != null">
        goods_specs_name,
      </if>
      <if test="goodsSpecsPic != null">
        goods_specs_pic,
      </if>
      <if test="saleQty != null">
        sale_qty,
      </if>
      <if test="discountPrice != null">
        discount_price,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderDtlId != null">
        #{orderDtlId,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsId != null">
        #{goodsSpecsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSpecsName != null">
        #{goodsSpecsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsPic != null">
        #{goodsSpecsPic,jdbcType=VARCHAR},
      </if>
      <if test="saleQty != null">
        #{saleQty,jdbcType=INTEGER},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.applet.common.entity.SaleOrderDetailsExample" resultType="java.lang.Long">
    select count(*) from sale_order_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sale_order_dtl
    <set>
      <if test="record.orderDtlId != null">
        order_dtl_id = #{record.orderDtlId,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecsId != null">
        goods_specs_id = #{record.goodsSpecsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSpecsName != null">
        goods_specs_name = #{record.goodsSpecsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecsPic != null">
        goods_specs_pic = #{record.goodsSpecsPic,jdbcType=VARCHAR},
      </if>
      <if test="record.saleQty != null">
        sale_qty = #{record.saleQty,jdbcType=INTEGER},
      </if>
      <if test="record.discountPrice != null">
        discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.salePrice != null">
        sale_price = #{record.salePrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sale_order_dtl
    set order_dtl_id = #{record.orderDtlId,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_specs_id = #{record.goodsSpecsId,jdbcType=INTEGER},
      goods_specs_name = #{record.goodsSpecsName,jdbcType=VARCHAR},
      goods_specs_pic = #{record.goodsSpecsPic,jdbcType=VARCHAR},
      sale_qty = #{record.saleQty,jdbcType=INTEGER},
      discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      sale_price = #{record.salePrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.applet.common.entity.SaleOrderDetails">
    update sale_order_dtl
    <set>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsId != null">
        goods_specs_id = #{goodsSpecsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSpecsName != null">
        goods_specs_name = #{goodsSpecsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsPic != null">
        goods_specs_pic = #{goodsSpecsPic,jdbcType=VARCHAR},
      </if>
      <if test="saleQty != null">
        sale_qty = #{saleQty,jdbcType=INTEGER},
      </if>
      <if test="discountPrice != null">
        discount_price = #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null">
        sale_price = #{salePrice,jdbcType=DECIMAL},
      </if>
    </set>
    where order_dtl_id = #{orderDtlId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.applet.common.entity.SaleOrderDetails">
    update sale_order_dtl
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_specs_id = #{goodsSpecsId,jdbcType=INTEGER},
      goods_specs_name = #{goodsSpecsName,jdbcType=VARCHAR},
      goods_specs_pic = #{goodsSpecsPic,jdbcType=VARCHAR},
      sale_qty = #{saleQty,jdbcType=INTEGER},
      discount_price = #{discountPrice,jdbcType=DECIMAL},
      sale_price = #{salePrice,jdbcType=DECIMAL}
    where order_dtl_id = #{orderDtlId,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>
</mapper>
