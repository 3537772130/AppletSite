<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.applet.common.mapper.OrderDetailsMapper">
  <resultMap id="BaseResultMap" type="com.applet.common.entity.OrderDetails">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_discount" jdbcType="INTEGER" property="goodsDiscount" />
    <result column="goods_specs_id" jdbcType="INTEGER" property="goodsSpecsId" />
    <result column="goods_specs_name" jdbcType="VARCHAR" property="goodsSpecsName" />
    <result column="goods_specs_type" jdbcType="VARCHAR" property="goodsSpecsType" />
    <result column="goods_specs_pic" jdbcType="VARCHAR" property="goodsSpecsPic" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="sell_price" jdbcType="DOUBLE" property="sellPrice" />
    <result column="actual_price" jdbcType="DOUBLE" property="actualPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, goods_id, goods_name, goods_discount, goods_specs_id, goods_specs_name,
    goods_specs_type, goods_specs_pic, goods_number, sell_price, actual_price
  </sql>
  <select id="selectByExample" parameterType="com.applet.common.entity.OrderDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.applet.common.entity.OrderDetailsExample">
    delete from order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.applet.common.entity.OrderDetails">
    insert into order_details (id, order_id, goods_id,
      goods_name, goods_discount, goods_specs_id,
      goods_specs_name, goods_specs_type, goods_specs_pic,
      goods_number, sell_price, actual_price
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER},
      #{goodsName,jdbcType=VARCHAR}, #{goodsDiscount,jdbcType=INTEGER}, #{goodsSpecsId,jdbcType=INTEGER},
      #{goodsSpecsName,jdbcType=VARCHAR}, #{goodsSpecsType,jdbcType=VARCHAR}, #{goodsSpecsPic,jdbcType=VARCHAR},
      #{goodsNumber,jdbcType=INTEGER}, #{sellPrice,jdbcType=DOUBLE}, #{actualPrice,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.applet.common.entity.OrderDetails" useGeneratedKeys="true">
    insert into order_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsDiscount != null">
        goods_discount,
      </if>
      <if test="goodsSpecsId != null">
        goods_specs_id,
      </if>
      <if test="goodsSpecsName != null">
        goods_specs_name,
      </if>
      <if test="goodsSpecsType != null">
        goods_specs_type,
      </if>
      <if test="goodsSpecsPic != null">
        goods_specs_pic,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="actualPrice != null">
        actual_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDiscount != null">
        #{goodsDiscount,jdbcType=INTEGER},
      </if>
      <if test="goodsSpecsId != null">
        #{goodsSpecsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSpecsName != null">
        #{goodsSpecsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsType != null">
        #{goodsSpecsType,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsPic != null">
        #{goodsSpecsPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="actualPrice != null">
        #{actualPrice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.applet.common.entity.OrderDetailsExample" resultType="java.lang.Long">
    select count(*) from order_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_details
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDiscount != null">
        goods_discount = #{record.goodsDiscount,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSpecsId != null">
        goods_specs_id = #{record.goodsSpecsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSpecsName != null">
        goods_specs_name = #{record.goodsSpecsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecsType != null">
        goods_specs_type = #{record.goodsSpecsType,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecsPic != null">
        goods_specs_pic = #{record.goodsSpecsPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.actualPrice != null">
        actual_price = #{record.actualPrice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_details
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_discount = #{record.goodsDiscount,jdbcType=INTEGER},
      goods_specs_id = #{record.goodsSpecsId,jdbcType=INTEGER},
      goods_specs_name = #{record.goodsSpecsName,jdbcType=VARCHAR},
      goods_specs_type = #{record.goodsSpecsType,jdbcType=VARCHAR},
      goods_specs_pic = #{record.goodsSpecsPic,jdbcType=VARCHAR},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      actual_price = #{record.actualPrice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.applet.common.entity.OrderDetails">
    update order_details
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDiscount != null">
        goods_discount = #{goodsDiscount,jdbcType=INTEGER},
      </if>
      <if test="goodsSpecsId != null">
        goods_specs_id = #{goodsSpecsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSpecsName != null">
        goods_specs_name = #{goodsSpecsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsType != null">
        goods_specs_type = #{goodsSpecsType,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecsPic != null">
        goods_specs_pic = #{goodsSpecsPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="actualPrice != null">
        actual_price = #{actualPrice,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.applet.common.entity.OrderDetails">
    update order_details
    set order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_discount = #{goodsDiscount,jdbcType=INTEGER},
      goods_specs_id = #{goodsSpecsId,jdbcType=INTEGER},
      goods_specs_name = #{goodsSpecsName,jdbcType=VARCHAR},
      goods_specs_type = #{goodsSpecsType,jdbcType=VARCHAR},
      goods_specs_pic = #{goodsSpecsPic,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      sell_price = #{sellPrice,jdbcType=DOUBLE},
      actual_price = #{actualPrice,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>

  <insert id="batchInsert" parameterType="java.util.List" >
    <selectKey resultType="java.lang.Integer" keyProperty="orderId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_details (order_id, goods_id, goods_name, goods_discount,goods_specs_id,
    goods_specs_name, goods_specs_pic,goods_number, sell_price, actual_price)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.orderId,jdbcType=INTEGER}, #{item.goodsId,jdbcType=INTEGER}, #{item.goodsName,jdbcType=VARCHAR}, #{item.goodsDiscount,jdbcType=INTEGER},
      #{item.goodsSpecsId,jdbcType=INTEGER}, #{item.goodsSpecsName,jdbcType=VARCHAR},#{item.goodsSpecsType,jdbcType=VARCHAR}, #{item.goodsSpecsPic,jdbcType=VARCHAR},
      #{item.goodsNumber,jdbcType=INTEGER}, #{item.sellPrice,jdbcType=DOUBLE}, #{item.actualPrice,jdbcType=DOUBLE}
      )
    </foreach>
  </insert>
</mapper>
