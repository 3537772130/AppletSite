<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.applet.common.mapper.GoodsSpecsMapper">
  <resultMap id="BaseResultMap" type="com.applet.common.entity.GoodsSpecs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="specs_src" jdbcType="VARCHAR" property="specsSrc" />
    <result column="specs_name" jdbcType="VARCHAR" property="specsName" />
    <result column="specs_type_list" jdbcType="VARCHAR" property="specsTypeList" />
    <result column="sell_price" jdbcType="DOUBLE" property="sellPrice" />
    <result column="describe_str" jdbcType="VARCHAR" property="describeStr" />
    <result column="specs_index" jdbcType="INTEGER" property="specsIndex" />
    <result column="specs_status" jdbcType="BIT" property="specsStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_id, specs_src, specs_name, specs_type_list, sell_price, describe_str, specs_index, 
    specs_status
  </sql>
  <select id="selectByExample" parameterType="com.applet.common.entity.GoodsSpecsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_specs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_specs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.applet.common.entity.GoodsSpecsExample">
    delete from goods_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.applet.common.entity.GoodsSpecs">
    insert into goods_specs (id, goods_id, specs_src, 
      specs_name, specs_type_list, sell_price, 
      describe_str, specs_index, specs_status
      )
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{specsSrc,jdbcType=VARCHAR}, 
      #{specsName,jdbcType=VARCHAR}, #{specsTypeList,jdbcType=VARCHAR}, #{sellPrice,jdbcType=DOUBLE}, 
      #{describeStr,jdbcType=VARCHAR}, #{specsIndex,jdbcType=INTEGER}, #{specsStatus,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.applet.common.entity.GoodsSpecs" useGeneratedKeys="true">
    insert into goods_specs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="specsSrc != null">
        specs_src,
      </if>
      <if test="specsName != null">
        specs_name,
      </if>
      <if test="specsTypeList != null">
        specs_type_list,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="describeStr != null">
        describe_str,
      </if>
      <if test="specsIndex != null">
        specs_index,
      </if>
      <if test="specsStatus != null">
        specs_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specsSrc != null">
        #{specsSrc,jdbcType=VARCHAR},
      </if>
      <if test="specsName != null">
        #{specsName,jdbcType=VARCHAR},
      </if>
      <if test="specsTypeList != null">
        #{specsTypeList,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="describeStr != null">
        #{describeStr,jdbcType=VARCHAR},
      </if>
      <if test="specsIndex != null">
        #{specsIndex,jdbcType=INTEGER},
      </if>
      <if test="specsStatus != null">
        #{specsStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.applet.common.entity.GoodsSpecsExample" resultType="java.lang.Long">
    select count(*) from goods_specs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_specs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.specsSrc != null">
        specs_src = #{record.specsSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.specsName != null">
        specs_name = #{record.specsName,jdbcType=VARCHAR},
      </if>
      <if test="record.specsTypeList != null">
        specs_type_list = #{record.specsTypeList,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.describeStr != null">
        describe_str = #{record.describeStr,jdbcType=VARCHAR},
      </if>
      <if test="record.specsIndex != null">
        specs_index = #{record.specsIndex,jdbcType=INTEGER},
      </if>
      <if test="record.specsStatus != null">
        specs_status = #{record.specsStatus,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_specs
    set id = #{record.id,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      specs_src = #{record.specsSrc,jdbcType=VARCHAR},
      specs_name = #{record.specsName,jdbcType=VARCHAR},
      specs_type_list = #{record.specsTypeList,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      describe_str = #{record.describeStr,jdbcType=VARCHAR},
      specs_index = #{record.specsIndex,jdbcType=INTEGER},
      specs_status = #{record.specsStatus,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.applet.common.entity.GoodsSpecs">
    update goods_specs
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specsSrc != null">
        specs_src = #{specsSrc,jdbcType=VARCHAR},
      </if>
      <if test="specsName != null">
        specs_name = #{specsName,jdbcType=VARCHAR},
      </if>
      <if test="specsTypeList != null">
        specs_type_list = #{specsTypeList,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="describeStr != null">
        describe_str = #{describeStr,jdbcType=VARCHAR},
      </if>
      <if test="specsIndex != null">
        specs_index = #{specsIndex,jdbcType=INTEGER},
      </if>
      <if test="specsStatus != null">
        specs_status = #{specsStatus,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.applet.common.entity.GoodsSpecs">
    update goods_specs
    set goods_id = #{goodsId,jdbcType=INTEGER},
      specs_src = #{specsSrc,jdbcType=VARCHAR},
      specs_name = #{specsName,jdbcType=VARCHAR},
      specs_type_list = #{specsTypeList,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DOUBLE},
      describe_str = #{describeStr,jdbcType=VARCHAR},
      specs_index = #{specsIndex,jdbcType=INTEGER},
      specs_status = #{specsStatus,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.rowStart},#{page.pageSize}
    </if>
  </sql>
</mapper>